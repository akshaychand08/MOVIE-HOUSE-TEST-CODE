#sahid malik
from __future__ import unicode_literals
import math
import wget
import time
import re
import os
import json
import asyncio
import asyncio
import aiohttp
import aiofiles
import pyrogram
import requests
from os import environ
from typing import List
from Script import script
from telegraph import upload_file
from info import PHT, ADMINS, AUTH_USERS
from pyrogram.errors import FloodWait
from pyrogram.errors import FloodWait, MessageNotModified
from youtubesearchpython import SearchVideos
from pyrogram.errors.exceptions.forbidden_403 import ChatWriteForbidden
from pyrogram.errors.exceptions.bad_request_400 import ChatAdminRequired, UserAdminInvalid
from pyrogram.types.messages_and_media import message
from pyrogram.types import Message, ChatPermissions, InlineKeyboardButton
from database.users_chats_db import db
from database.ia_filterdb import Media
from pyrogram import Client, filters, enums 
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from utils import temp, get_size
from collections import defaultdict
from typing import Dict, List, Union
from time import time, sleep
from plugins.channel import malik7

class evamaria(Client):
    filterstore: Dict[str, Dict[str, str]] = defaultdict(dict)
    warndatastore: Dict[
        str, Dict[str, Union[str, int, List[str]]]
    ] = defaultdict(dict)
    warnsettingsstore: Dict[str, str] = defaultdict(dict)

    def __init__(self):
        name = self.__class__.__name__.lower()
        super().__init__(
            ":memory:",
            plugins=dict(root=f"{name}/plugins"),
            workdir=TMP_DOWNLOAD_DIRECTORY,
            api_id=APP_ID,
            api_hash=API_HASH,
            bot_token=BOT_TOKEN,
            parse_mode="html",
            sleep_threshold=60
        )

# Commands Botinfo

@Client.on_message(filters.command("BOTINFO") & filters.incoming)
async def botinfo(client, message):
    if len(message.command):
        reply_markup = malik7.hstnb
        await message.reply_photo(
            photo=(GHHMO),
            caption=(GHHMM.format(message.from_user.mention)),
            reply_markup=reply_markup,
            parse_mode=enums.ParseMode.HTML
        )

# Commands stats

@Client.on_message(filters.command('malik') & filters.incoming)
async def get_ststs(bot, message):
    malik = await message.reply('Wait..')
    total_users = await db.total_users_count()
    await malik.edit(
               text=(GHHMT.format(total_users)),
               reply_markup=malik7.hstnb,
    ),
               
                                      

# Commands Owner Details 

@Client.on_message(filters.command("OWNER") & filters.incoming)
async def owner(client, message):
    if len(message.command):
        buttons = [[
            InlineKeyboardButton('üí¢ close üí¢', callback_data='close_data')
        ]]
        reply_markup = InlineKeyboardMarkup(buttons)
        await message.reply_photo(
            photo=(GHHMN),
            caption=(MY_DETALS.format(message.from_user.mention)),
            reply_markup=reply_markup,
            parse_mode=enums.ParseMode.HTML
        )
        return

# Commands Rules

@Client.on_message(filters.command("RULES") & filters.incoming)
async def rules(client, message):
    if len(message.command):
        buttons = [[
            InlineKeyboardButton('üí¢ close üí¢', callback_data='close_data')
        ]]
        reply_markup = InlineKeyboardMarkup(buttons)
        await message.reply_photo(
            photo=(G_R),
            caption=(GROUP_Rules),
            reply_markup=reply_markup,
            parse_mode=enums.ParseMode.HTML
        )
        return

# user py

from pyrogram.types import Message


def extract_user(message: Message) -> (int, str):
    """extracts the user from a message"""
    user_id = None
    user_first_name = None

    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
        user_first_name = message.reply_to_message.from_user.first_name

    elif len(message.command) > 1:
        if (
            len(message.entities) > 1 and
            message.entities[1].type == "text_mention"
        ):
            # 0: is the command used
            # 1: should be the user specified
            required_entity = message.entities[1]
            user_id = required_entity.user.id
            user_first_name = required_entity.user.first_name
        else:
            user_id = message.command[1]
            # don't want to make a request -_-
            user_first_name = user_id

        try:
            user_id = int(user_id)
        except ValueError:
            print("‡¥™‡µä‡¥ü‡µç‡¥ü‡µª")

    else:
        user_id = message.from_user.id
        user_first_name = message.from_user.first_name

    return (user_id, user_first_name)


# string_handling py

MATCH_MD = re.compile(r'\*(.*?)\*|'
                      r'_(.*?)_|'
                      r'`(.*?)`|'
                      r'(?<!\\)(\[.*?\])(\(.*?\))|'
                      r'(?P<esc>[*_`\[])')

# regex to find []() links -> hyperlinks/buttons
LINK_REGEX = re.compile(r'(?<!\\)\[.+?\]\((.*?)\)')
BTN_URL_REGEX = re.compile(
    r"(\[([^\[]+?)\]\(buttonurl:(?:/{0,2})(.+?)(:same)?\))"
)


def button_markdown_parser(msg: Message) -> (str, List):
    # offset = len(args[2]) - len(raw_text)
    # set correct offset relative to command + notename
    markdown_note = None
    if msg.media:
        if msg.caption:
            markdown_note = msg.caption.markdown
    else:
        markdown_note = msg.text.markdown
    note_data = ""
    buttons = []
    if markdown_note is None:
        return note_data, buttons
    #
    if markdown_note.startswith(COMMAND_HAND_LER):
        args = markdown_note.split(None, 2)
        # use python's maxsplit to separate cmd and args
        markdown_note = args[2]
    prev = 0
    for match in BTN_URL_REGEX.finditer(markdown_note):
        # Check if btnurl is escaped
        n_escapes = 0
        to_check = match.start(1) - 1
        while to_check > 0 and markdown_note[to_check] == "\\":
            n_escapes += 1
            to_check -= 1

        # if even, not escaped -> create button
        if n_escapes % 2 == 0:
            # create a thruple with button label, url, and newline status
            if bool(match.group(4)) and buttons:
                buttons[-1].append(InlineKeyboardButton(
                    text=match.group(2),
                    url=match.group(3)
                ))
            else:
                buttons.append([InlineKeyboardButton(
                    text=match.group(2),
                    url=match.group(3)
                )])
            note_data += markdown_note[prev:match.start(1)]
            prev = match.end(1)
        # if odd, escaped -> move along
        else:
            note_data += markdown_note[prev:to_check]
            prev = match.start(1) - 1
    else:
        note_data += markdown_note[prev:]

    return note_data, buttons


def extract_time(time_val):
    if any(time_val.endswith(unit) for unit in ('s', 'm', 'h', 'd')):
        unit = time_val[-1]
        time_num = time_val[:-1]  # type: str
        if not time_num.isdigit():
            return None

        if unit == 's':
            bantime = int(time.time() + int(time_num))
        elif unit == 'm':
            bantime = int(time.time() + int(time_num) * 60)
        elif unit == 'h':
            bantime = int(time.time() + int(time_num) * 60 * 60)
        elif unit == 'd':
            bantime = int(time.time() + int(time_num) * 24 * 60 * 60)
        else:
            # how even...?
            return None
        return bantime
    else:
        return None


def format_welcome_caption(html_string, chat_member):
    return html_string.format(
        dc_id=chat_member.dc_id,
        first_name=chat_member.first_name,
        id=chat_member.id,
        last_name=chat_member.last_name,
        mention=chat_member.mention,
        username=chat_member.username
    )

# admin py
async def admin_check(message: Message) -> bool:
    if not message.from_user:
        return False

    if message.chat.type not in ["supergroup", "channel"]:
        return False

    if message.from_user.id in [
        777000,  # Telegram Service Notifications
        1087968824  # GroupAnonymousBot
    ]:
        return True

    client = message._client
    chat_id = message.chat.id
    user_id = message.from_user.id

    check_status = await client.get_chat_member(
        chat_id=chat_id,
        user_id=user_id
    )
    admin_strings = [
        "creator",
        "administrator"
    ]
    # https://git.colinshark.de/PyroBot/PyroBot/src/branch/master/pyrobot/modules/admin.py#L69
    if check_status.status not in admin_strings:
        return False
    else:
        return True


#get file id

def get_file_id(msg: Message):
    if msg.media:
        for message_type in (
            "photo",
            "animation",
            "audio",
            "document",
            "video",
            "video_note",
            "voice",
            # "contact",
            # "dice",
            # "poll",
            # "location",
            # "venue",
            "sticker"
        ):
            obj = getattr(msg, message_type)
            if obj:
                setattr(obj, "message_type", message_type)
                return obj


# cust. file id


USE_AS_BOT = os.environ.get("USE_AS_BOT", True)

def f_sudo_filter(filt, client, message):
    return bool(
        message.from_user.id in AUTH_USERS
    )


sudo_filter = filters.create(
    func=f_sudo_filter,
    name="SudoFilter"
)


def onw_filter(filt, client, message):
    if USE_AS_BOT:
        return bool(
            True # message.from_user.id in ADMINS
        )
    else:
        return bool(
            message.from_user and
            message.from_user.is_self
        )


f_onw_fliter = filters.create(
    func=onw_filter,
    name="OnwFilter"
)


async def admin_filter_f(filt, client, message):
    return await admin_check(message)


admin_fliter = filters.create(
    func=admin_filter_f,
    name="AdminFilter"
)

# song and video py

# kick py

@Client.on_message(filters.incoming & ~filters.private & filters.command('inkick'))
def inkick(client, message):
  user = client.get_chat_member(message.chat.id, message.from_user.id)
  if user.status == ("creator"):
    if len(message.command) > 1:
      input_str = message.command
      sent_message = message.reply_text(START_KICK)
      sleep(20)
      sent_message.delete()
      message.delete()
      count = 0
      for member in client.iter_chat_members(message.chat.id):
        if member.user.status in input_str and not member.status in ('administrator', 'creator'):
          try:
            client.kick_chat_member(message.chat.id, member.user.id, int(time() + 45))
            count += 1
            sleep(1)
          except (ChatAdminRequired, UserAdminInvalid):
            sent_message.edit(ADMIN_REQUIRED)
            client.leave_chat(message.chat.id)
            break
          except FloodWait as e:
            sleep(e.x)
      try:
        sent_message.edit(KICKED.format(count))
        sleep(15)
        sent_message.delete()
        message.delete()
      except ChatWriteForbidden:
        pass
    else:
      sent_message = message.reply_text(INPUT_REQUIRED)
      sleep(15)
      sent_message.delete()
      message.delete()
  else:
    sent_message = message.reply_text(CREATOR_REQUIRED)
    sleep(5)
    sent_message.delete()
    message.delete()

@Client.on_message(filters.incoming & ~filters.private & filters.command('dkick'))
def dkick(client, message):
  user = client.get_chat_member(message.chat.id, message.from_user.id)
  if user.status == ("creator"):
    sent_message = message.reply_text(START_KICK)
    sleep(20)
    sent_message.delete()
    message.delete()
    count = 0
    for member in client.iter_chat_members(message.chat.id):
      if member.user.is_deleted and not member.status in ('administrator', 'creator'):
        try:
          client.kick_chat_member(message.chat.id, member.user.id, int(time() + 45))
          count += 1
          sleep(1)
        except (ChatAdminRequired, UserAdminInvalid):
          sent_message.edit(ADMIN_REQUIRED)
          client.leave_chat(message.chat.id)
          break
        except FloodWait as e:
          sleep(e.x)
    try:
      sent_message.edit(DKICK.format(count))
    except ChatWriteForbidden:
      pass
  else:
    sent_message = message.reply_text(CREATOR_REQUIRED)
    sleep(5)
    sent_message.delete()
    message.delete()

@Client.on_message(filters.incoming & ~filters.private & filters.command('instatus'))
def instatus(client, message):
  user = client.get_chat_member(message.chat.id, message.from_user.id)
  if user.status in ('administrator', 'creator', 'ADMINS'):
    sent_message = message.reply_text(FETCHING_INFO)
    recently = 0
    within_week = 0
    within_month = 0
    long_time_ago = 0
    deleted_acc = 0
    uncached = 0
    bot = 0
    for member in client.iter_chat_members(message.chat.id):
      user = member.user
      if user.is_deleted:
        deleted_acc += 1
      elif user.is_bot:
        bot += 1
      elif user.status == "recently":
        recently += 1
      elif user.status == "within_week":
        within_week += 1
      elif user.status == "within_month":
        within_month += 1
      elif user.status == "long_time_ago":
        long_time_ago += 1
      else:
        uncached += 1
    sent_message.edit(STATUS.format(message.chat.title, recently, within_week, within_month, long_time_ago, deleted_acc, bot, uncached))
    sleep(60)
    sent_message.delete()
    message.delete()

#telegra.ph 

@Client.on_message(filters.command(["tel", "tg", "telegraph"]))
async def telegraph(client, message):
    replied = message.reply_to_message
    if not replied:
        await message.reply("Reply to a supported media file")
        return
    if not (
        (replied.photo and replied.photo.file_size <= 5242880)
        or (replied.animation and replied.animation.file_size <= 5242880)
        or (
            replied.video
            and replied.video.file_name.endswith(".mp4")
            and replied.video.file_size <= 5242880
        )
        or (
            replied.document
            and replied.document.file_name.endswith(
                (".jpg", ".jpeg", ".png", ".gif", ".mp4"),
            )
            and replied.document.file_size <= 5242880
        )
    ):
        s = await message.reply_photo(
        photo=(MQTK),
        caption=(MMALL.format(message.from_user.mention)),
        reply_markup=InlineKeyboardMarkup(
                      [[
                        InlineKeyboardButton('Try again ', callback_data="close_data")
                      ]]
        ),
        parse_mode=enums.ParseMode.HTML
)
        await asyncio.sleep(10)
        await s.delete()
        return    
    download_location = await client.download_media(
        message=message.reply_to_message,
        file_name="root/downloads/",
    )
    mkn=await message.reply_text(
        text="<code>Trying to processing please weit.....</code>",
        disable_web_page_preview=True
    )
    await asyncio.sleep(1)
    await mkn.delete()
    try:
        response = upload_file(download_location)
    except Exception as document:
        await message.reply(message, text=document)
    else:
        await message.reply_photo(
            photo=f"https://telegra.ph{response[0]}",
            caption=f"<b>ùóÖùóÇùóáùóÑ:-</b> <code>https://telegra.ph{response[0]}</code>\n\n Powerd By: @m_house786 ",
            quote=True,
            reply_markup=InlineKeyboardMarkup([[
               InlineKeyboardButton("‚ö°Ô∏è Open Link‚ö°Ô∏è", url=f"https://telegra.ph{response[0]}"),
               InlineKeyboardButton("‚ôªÔ∏è Shere Link ‚ôªÔ∏è", url=f"https://telegram.me/share/url?url=https://telegra.ph{response[0]}")
               ],[
               InlineKeyboardButton("üí¢ Close üí¢", callback_data="close_data")
               ]]
            ),
            parse_mode=enums.ParseMode.HTML
)
    finally:
        os.remove(download_location)

# sticker py

@Client.on_message(filters.command(["stickerid"]))
async def stickerid(bot, message):   
    if message.reply_to_message.sticker:
       await message.reply(f"**Sticker ID is**  \n `{message.reply_to_message.sticker.file_id}` \n \n ** Unique ID is ** \n\n`{message.reply_to_message.sticker.file_unique_id}`", quote=True)
    else: 
       n = await message.reply_photo(
       photo=(MQTK),
       caption=(MMAL.format(message.from_user.mention)),
       reply_markup=InlineKeyboardMarkup(
                      [[
                        InlineKeyboardButton('Try again ', callback_data="close_data")
                      ]]
       ),
       parse_mode=enums.ParseMode.HTML
)
       await asyncio.sleep(12)
       await n.delete()


SS_ALERT = """

üîπ·¥ç è …¥·¥Ä·¥ç·¥á ·¥ç·¥è·¥†…™·¥ás  ú·¥è·¥ús·¥á  üè† B·¥è·¥õ
üîπI ·¥Ä·¥ç A·¥ú·¥õ·¥è F…™ ü·¥õ·¥á Ä B·¥è·¥õ.üòé
üîπJ·¥ús·¥õ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥
üîπ…™·¥õ ·¥°…™ ü ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ü ü ·¥ç·¥è·¥†…™·¥ás  è·¥è·¥ú Ä  …¢ Ä·¥è·¥ú·¥ò.üòé

üîπ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥õ è·¥ò·¥á  üëâ / ô·¥è·¥õ…™…¥“ì·¥è 
üîπO·¥†…¥·¥á Ä ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥õ…™·¥ò·¥á  üëâ  /·¥è·¥°…¥·¥á Ä"""

RULES_ALERT = """
üîπ·¥ç·¥è·¥†…™·¥á s·¥á·¥Ä Ä·¥Ñ ú Ex:
 1 ·¥Ä·¥†·¥á…¥…¢·¥á Äs ‚úÖ
 2 ·¥Ä·¥†·¥á…¥…¢·¥á Äs  ú…™…¥·¥Ö…™ ‚úÖ
 3 ·¥Ä·¥†·¥á…¥…¢·¥á Äs  ú…™…¥·¥Ö…™ ·¥ç·¥è·¥†…™·¥á ‚ùå

üîπ W·¥á ô S·¥á Ä…™·¥ás Ex ü:
 1 ·¥†…™·¥ã…™…¥…¢s S01 ‚úÖ
 2 ·¥†…™·¥ã…™…¥…¢s S01E01 ‚úÖ
 3 ·¥†…™·¥ã…™…¥…¢s s·¥á·¥Äs·¥è…¥ 1 ‚ùå

üîπM·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ ü·¥ás ·¥õ…™·¥ò·¥á üëâ / Ä·¥ú ü·¥ás"""

REPORT = """‚û§ ùêáùêûùê•ùê©: Report ‚ö†Ô∏è

ùöÉùöëùöíùöú ùöåùöòùöñùöñùöäùöóùöç ùöëùöéùöïùöôùöú ùö¢ùöòùöû ùöùùöò ùöõùöéùöôùöòùöõùöù ùöä ùöñùöéùöúùöúùöäùöêùöé ùöòùöõ ùöä ùöûùöúùöéùöõ ùöùùöò ùöùùöëùöé ùöäùöçùöñùöíùöóùöú ùöòùöè ùöùùöëùöé ùöõùöéùöúùöôùöéùöåùöùùöíùöüùöé ùöêùöõùöòùöûùöô. ùô≥ùöòùöó'ùöù ùöñùöíùöúùöûùöúùöé ùöùùöëùöíùöú ùöåùöòùöñùöñùöäùöóùöç.

‚û§ ùêÇùê®ùê¶ùê¶ùêöùêßùêùùê¨ ùêöùêßùêù ùêîùê¨ùêöùê†ùêû:

‚û™/report ùóàùóã @admins - ùñ≥ùóà ùóãùñæùóâùóàùóãùóç ùñ∫ ùóéùóåùñæùóã ùóçùóà ùóçùóÅùñæ ùñ∫ùñΩùóÜùóÇùóáùóå (ùóãùñæùóâùóÖùóí ùóçùóà ùñ∫ ùóÜùñæùóåùóåùñ∫ùóÄùñæ)."""


PURGE = """<b>Purge</b>
    
Delete A Lot Of Messages From Groups! 
    
 <b>ADMIN</b> 

‚óâ /purge :- Delete All Messages From The Replied To Message, To The Current Message"""

MUTE = """‚û§ <b>ùêáùêûùê•ùê©: Mute üö´

ùöÉùöëùöéùöúùöé ùöäùöõùöé ùöùùöëùöé ùöåùöòùöñùöñùöäùöóùöçùöú ùöä ùöêùöõùöòùöûùöô ùöäùöçùöñùöíùöó ùöåùöäùöó ùöûùöúùöé ùöùùöò ùöñùöäùöóùöäùöêùöé ùöùùöëùöéùöíùöõ ùöêùöõùöòùöûùöô ùöñùöòùöõùöé ùöéùöèùöèùöíùöåùöíùöéùöóùöùùöïùö¢.

‚û™/ban: ùñ≥ùóà ùñªùñ∫ùóá ùñ∫ ùóéùóåùñæùóã ùñøùóãùóàùóÜ ùóçùóÅùñæ ùóÄùóãùóàùóéùóâ.
‚û™/unban: ùñ≥ùóà ùóéùóáùñªùñ∫ùóá ùñ∫ ùóéùóåùñæùóã ùóÇùóá ùóçùóÅùñæ ùóÄùóãùóàùóéùóâ.
‚û™/tban: ùñ≥ùóà ùóçùñæùóÜùóâùóàùóãùñ∫ùóãùóÇùóÖùóí ùñªùñ∫ùóá ùñ∫ ùóéùóåùñæùóã.
‚û™/mute: ùñ≥ùóà ùóÜùóéùóçùñæ ùñ∫ ùóéùóåùñæùóã ùóÇùóá ùóçùóÅùñæ ùóÄùóãùóàùóéùóâ.
‚û™/unmute: ùñ≥ùóà ùóéùóáùóÜùóéùóçùñæ ùñ∫ ùóéùóåùñæùóã ùóÇùóá ùóçùóÅùñæ ùóÄùóãùóàùóéùóâ.
‚û™/tmute: ùñ≥ùóà ùóçùñæùóÜùóâùóàùóãùñ∫ùóãùóÇùóÖùóí ùóÜùóéùóçùñæ ùñ∫ ùóéùóåùñæùóã.

‚û§ ùñ≠ùóàùóçùñæ:
ùñ∂ùóÅùóÇùóÖùñæ ùóéùóåùóÇùóáùóÄ /tmute ùóàùóã /tban ùóíùóàùóé ùóåùóÅùóàùóéùóÖùñΩ ùóåùóâùñæùñºùóÇùñøùóí ùóçùóÅùñæ ùóçùóÇùóÜùñæ ùóÖùóÇùóÜùóÇùóç.

‚ûõùñ§ùóëùñ∫ùóÜùóâùóÖùñæ: /ùóçùñªùñ∫ùóá 2ùñΩ ùóàùóã /ùóçùóÜùóéùóçùñæ 2ùñΩ.
ùñ∏ùóàùóé ùñºùñ∫ùóá ùóéùóåùñæ ùóèùñ∫ùóÖùóéùñæùóå: ùóÜ/ùóÅ/ùñΩ. 
 ‚Ä¢ ùóÜ = ùóÜùóÇùóáùóéùóçùñæùóå
 ‚Ä¢ ùóÅ = ùóÅùóàùóéùóãùóå
 ‚Ä¢ ùñΩ = ùñΩùñ∫ùóíùóå</b>"""

MQTT = """<b>‚ö†Ô∏è ùêáùêûùê≤, {}!..</b> 

<b>ùêòùê®ùêÆùê´ ùê∞ùê®ùê´ùêù</b> üëâ <s>{}</s> ...
<b>ùê¢ùê¨ ùêçùê® ùêåùê®ùêØùê¢ùêû/ùêíùêûùê´ùê¢ùêûùê¨ ùêëùêûùê•ùêöùê≠ùêûùêù ùê≠ùê® ùê≠ùê°ùêû ùêÜùê¢ùêØùêûùêß ùêñùê®ùê´ùêù ùêñùêöùê¨ ùêÖùê®ùêÆùêßùêù ü•∫
ùêèùê•ùêûùêöùê¨ùêû ùêÜùê® ùê≠ùê® ùêÜùê®ùê®ùê†ùê•ùêû ùêöùêßùêù ùêÇùê®ùêßùêüùê¢ùê´ùê¶ ùê≠ùê°ùêû ùêÇùê®ùê´ùê´ùêûùêúùê≠ ùêíùê©ùêûùê•ùê•ùê¢ùêßùê† ü•∫</b> <b><a href=https://www.google.com>ùêÜùê®ùê®ùê†ùê•ùêû</a></b>"""


WCM = """<b>ùóõùó≤ùòÜ {} .!   

üîπ ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò.. <s>{}</s>

üîπ ·¥õ ú…™s …™s ·¥Ä ·¥ç·¥è·¥†…™·¥á …¢ Ä·¥è·¥ú·¥ò

üîπ ·¥Ä ü ü ·¥Ñ·¥Ä·¥õ·¥á…¢·¥è Ä…™·¥ás ·¥è“ì ·¥ç·¥è·¥†…™·¥ás
      ·¥Ä·¥†·¥Ä…™ ü ü·¥Ä ô·¥Ä ü·¥á  ú·¥á Ä·¥á..

üîπ ·¥ä·¥ús·¥õ ·¥õ…™·¥ò·¥á ·¥õ ú·¥á ·¥ç·¥è·¥†…™·¥á …¥·¥Ä·¥ç·¥á

üîπ ·¥è·¥ú Ä ·¥°…™ ü ü s·¥á…¥·¥Ö  è·¥è·¥ú Ä ·¥ç·¥è·¥†…™·¥á ..

üîπ ·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥Ä·¥Ö …¢ Ä·¥è·¥ú·¥ò  Ä·¥ú ü·¥ás

üîπ ¬©·¥ç·¥Ä…¥·¥õ·¥Ä…™…¥·¥á·¥Ö  ô è: s·¥Ä ú…™·¥Ö ·¥ç·¥Ä ü…™·¥ã</b>"""

STTS = """<b>üóÇùöÉùôæùöÉùô∞ùôª ùôµùô∏ùôªùô¥ùöÇ: <code>{}</code>
üë®‚Äçüë©‚Äçüëß‚Äçüëß ùöÉùôæùöÉùô∞ùôª ùöÑùöÇùô¥ùöÅùöÇ: <code>{}</code>
ü§ø ùöÉùôæùöÉùô∞ùôª ùô≤ùô∑ùô∞ùöÉùöÇ: <code>{}</code>
‚è≥ ùöÑùöÇùô¥ùô≥ ùöÇùöÉùôæùöÅùô∞ùô∂ùô¥: <code>{}</code> ùôºùöíùô±
‚åõÔ∏è ùôµùöÅùô¥ùô¥ ùöÇùöÉùôæùöÅùô∞ùô∂ùô¥: <code>{}</code> ùôºùöíùô±</b> """

# kick opinion 

CREATOR_REQUIRED = """‚ùó<b>You have To Be The Group Creator To Do That.</b>"""
      
INPUT_REQUIRED = "‚ùó **Arguments Required**"
      
KICKED = """‚úîÔ∏è Successfully Kicked {} Members According To The Arguments Provided."""
      
START_KICK = """üöÆ Removing Inactive Members This May Take A While..."""
      
ADMIN_REQUIRED = """‚ùó<b>I will not go to the place where I am not made Admin.. Add Me Again with all admin rights.</b>"""
      
DKICK = """‚úîÔ∏è Kicked {} Deleted Accounts Successfully."""
      
FETCHING_INFO = """<b>wait...</b>"""
      
STATUS = """{}\n<b>Chat Member Status</b>**\n\n```<i>Recently``` - {}\n```Within Week``` - {}\n```Within Month``` - {}\n```Long Time Ago``` - {}\nDeleted Account - {}\nBot - {}\nUnCached - {}</i>
"""

TEL = """<b>‚öô HELP: Telegraph üèû

Do as you wish with telegra.ph module!

USAGE:

üì≤ /telegraph, /tel. - Send me Picture or Vide Under (5MB)

NOTE:

‚Ä¢ This Command Is Available in goups and pms
‚Ä¢ This Command Can be used by everyone</b>"""



GHHMT = """<b>ùóßùóµùóÆùóªùó∏ùòÄ ùóôùóºùóø üë®‚Äçüëß‚Äçüëß {}.ùó®ùòÄùó≤ùóø... üíñ 

üîπ ·¥õ ú·¥Ä…¥·¥ãs “ì·¥è Ä  è·¥è·¥ú Ä s·¥ú·¥ò·¥ò·¥è Ä·¥õ...

üîπ ·¥ä·¥ús·¥õ ·¥Ä·¥Ö·¥Ö ·¥è·¥ú Ä  ô·¥è·¥õ ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥, …™·¥õ ·¥°…™ ü ü ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ç·¥è·¥†…™·¥ás ·¥õ ú·¥á Ä·¥á... üòé


     ‚ôãÔ∏è ùóôùó≤ùóÆùòÅùòÇùóøùó≤ùòÄ ‚ôãÔ∏è

üîπ A·¥ú·¥õ·¥è“ì…™ ü·¥õ·¥á Ä, M·¥Ä…¥·¥ú·¥Ä ü F…™ ü·¥õ·¥á Ä
üîπ …™·¥ç·¥Ö ô  ú·¥Ö ·¥ò·¥ès·¥õ·¥á Äs
üîπ …™·¥ç·¥Ö ô R·¥á·¥Ä ü D·¥á·¥õ·¥Ä…™ üs
üîπ ·¥õ·¥°·¥è B·¥ú·¥õ·¥õ·¥è…¥s M·¥Ä·¥Ö·¥á
üîπ F·¥è Ä·¥Ñ·¥á S·¥ú ôs·¥Ñ Ä…™ ô·¥á
üîπ F…™ ü·¥á-S·¥õ·¥è Ä·¥á
üîπ Ex·¥õ Ä·¥Ä F·¥á·¥Ä·¥õ·¥ú Ä·¥ás: ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö
       s·¥è…¥…¢·¥ás,
üîπ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  è·¥è·¥ú ·¥õ·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è, 
üîπ ·¥ú Ä ü S ú·¥è Ä·¥õ…¥·¥á Ä, ·¥ç·¥ú·¥õ·¥á ·¥ús·¥á Ä,
üîπ ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ès·¥á Ä. P·¥ú Ä…¢·¥á,
üîπ ·¥Ä·¥Ö·¥ç…™…¥  Ä·¥á·¥ò·¥è Ä·¥õ. 
üîπ ·¥ò ú·¥è·¥õ·¥è ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä“ì·¥á
        ü…™…¥·¥ã...

üîπ X·¥õ Ä·¥Ä C ú·¥á·¥Ñ·¥ã s·¥ò·¥á ü ü…™…¥…¢. B·¥ú·¥õ·¥õ·¥è…¥s..
üîπ ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥ç·¥è·¥†…™·¥á  Ä·¥á ü·¥á·¥Äs·¥á ·¥Ö·¥Ä·¥õ·¥á üìÖ. 
üîπ ·¥è·¥õ·¥õ  Ä·¥á ü·¥á·¥Äs·¥á ·¥Ö·¥Ä·¥õ·¥á ·¥Ä…¥·¥Ö ·¥ç·¥è Ä·¥á..

‚öô ·¥ç·¥è Ä·¥á F·¥á·¥Ä·¥õ·¥ú Ä·¥ás ·¥Ä·¥Ö·¥Ö…™…¥…¢ s·¥è·¥è…¥...</b>üòé"""


GHHMM = """<b>Hey {}.. ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è  ô·¥è·¥õ …™…¥“ì·¥è ‚ù§Ô∏è.

üîπ ·¥ç è …¥·¥Ä·¥ç·¥á ·¥ç·¥è·¥†…™·¥ás üè†  ô·¥è·¥õ..
üîπ I ·¥Ä·¥ç ·¥Ä·¥ú·¥õ·¥è“ì…™ ü·¥õ·¥á Ä  ô·¥è·¥õ.. 

üîπ ·¥ä·¥ús·¥õ ·¥Ä·¥Ö·¥Ö O·¥ú Ä  ô·¥è·¥õ ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò 
       …™s ·¥Ä·¥Ö·¥ç…™…¥,  
üîπ …™·¥õ ·¥°…™ ü ü ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ç·¥è·¥†…™·¥ás ·¥õ ú·¥á Ä·¥á 
       “ì Ä·¥á·¥á...

        ‚ôãÔ∏è ùóôùó≤ùóÆùòÅùòÇùóøùó≤ùòÄ ‚ôãÔ∏è

üîπ A·¥ú·¥õ·¥è“ì…™ ü·¥õ·¥á Ä, M·¥Ä…¥·¥ú·¥Ä ü F…™ ü·¥õ·¥á Ä
üîπ …™·¥ç·¥Ö ô  ú·¥Ö ·¥ò·¥ès·¥õ·¥á Äs
üîπ …™·¥ç·¥Ö ô R·¥á·¥Ä ü D·¥á·¥õ·¥Ä…™ üs
üîπ ·¥õ·¥°·¥è B·¥ú·¥õ·¥õ·¥è…¥s M·¥Ä·¥Ö·¥á
üîπ F·¥è Ä·¥Ñ·¥á S·¥ú ôs·¥Ñ Ä…™ ô·¥á
üîπ F…™ ü·¥á-S·¥õ·¥è Ä·¥á
üîπ Ex·¥õ Ä·¥Ä F·¥á·¥Ä·¥õ·¥ú Ä·¥ás: ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö
       s·¥è…¥…¢·¥ás,
üîπ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  è·¥è·¥ú ·¥õ·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è, 
üîπ ·¥ú Ä ü S ú·¥è Ä·¥õ…¥·¥á Ä, ·¥ç·¥ú·¥õ·¥á ·¥ús·¥á Ä,
üîπ ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ès·¥á Ä. P·¥ú Ä…¢·¥á,
üîπ ·¥Ä·¥Ö·¥ç…™…¥  Ä·¥á·¥ò·¥è Ä·¥õ. 
üîπ ·¥ò ú·¥è·¥õ·¥è ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä“ì·¥á
        ü…™…¥·¥ã...

üîπ X·¥õ Ä·¥Ä C ú·¥á·¥Ñ·¥ã s·¥ò·¥á ü ü…™…¥…¢. B·¥ú·¥õ·¥õ·¥è…¥s..
üîπ ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥ç·¥è·¥†…™·¥á  Ä·¥á ü·¥á·¥Äs·¥á ·¥Ö·¥Ä·¥õ·¥á üìÖ. 
üîπ ·¥è·¥õ·¥õ  Ä·¥á ü·¥á·¥Äs·¥á ·¥Ö·¥Ä·¥õ·¥á ·¥Ä…¥·¥Ö ·¥ç·¥è Ä·¥á..
üîπ 4…¢ ô s·¥ú·¥ò·¥ò·¥è Ä·¥õ
üîπ “ì·¥è…¥·¥õs s·¥õ è ü…™s ú ·¥õ·¥áx
‚öô ·¥ç·¥è Ä·¥á F·¥á·¥Ä·¥õ·¥ú Ä·¥ás ·¥Ä·¥Ö·¥Ö…™…¥…¢ s·¥è·¥è…¥...</b>üòé"""

GROUP_Rules = """<b>
     üîπ ùóöùó•ùó¢ùó®ùó£ ùó•ùó®ùóüùóòùó¶ üîπ

üîπ s·¥á·¥Ä Ä·¥Ñ ú ·¥°…™·¥õ ú ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ s·¥ò·¥á ü ü…™…¥…¢..
üîπ ·¥õ Ä è ·¥õ·¥è s·¥á·¥Ä Ä·¥Ñ ú ·¥ç·¥è·¥†…™·¥á ·¥°…™·¥õ ú  è·¥á·¥Ä Ä …™“ì ·¥õ ú·¥á  ô·¥è·¥õ…™s …¥·¥è·¥õ s·¥á…¥·¥Ö…™…¥…¢  è·¥è·¥ú ·¥Ä·¥Ñ·¥Ñ·¥ú Ä·¥Ä·¥õ·¥á  Ä·¥ás·¥ú ü·¥õ...

üîπ ùòÄùó≤ùóÆùóøùó∞ùóµ ùó∫ùóºùòÉùó∂ùó≤ ùó∂ùóª ùóßùóµùó≤ ùóöùó∂ùòÉùó≤ùóª ùóôùóøùóºùó∫ ùóòùòÖùóπ:   
üîπ (1) ·¥Ä·¥†·¥á…¥…¢·¥á Äs ‚úÖ
üîπ (2) ·¥Ä·¥†·¥á…¥…¢·¥á Äs  ú…™…¥·¥Ö…™ ‚úÖ
üîπ (3) ·¥Ä·¥†·¥á…¥…¢·¥á Äs ·¥ç·¥è·¥†…™·¥á ‚ùå
üîπ (4) ·¥Ä·¥†·¥á…¥…¢·¥á Äs  ú…™…¥·¥Ö…™ ·¥Ö·¥ú ô ô·¥á·¥Ö..‚ùå

üîπ ùòÄùó≤ùóÆùóøùó∞ùóµ ùòÑùó≤ùóØ ùòÄùó≤ùóøùó∂ùó≤ùòÄ ùó∂ùóª ùóßùóµùó≤ ùóöùó∂ùòÉùó≤ùóª ùóôùóøùóºùó∫ ùóòùòÖùóπ:
üîπ (1) ·¥†…™·¥ã…™…¥…¢s S01 ‚úÖ
üîπ (2) ·¥†…™·¥ã…™…¥…¢s S01E01 ‚úÖ
üîπ (3) ·¥†…™·¥ã…™…¥…¢s S01E10 ‚úÖ
üîπ (4) ·¥†…™·¥ã…™…¥…¢s S01  ú…™…¥·¥Ö…™ ‚úÖ
üîπ (5) ·¥†…™·¥ã…™…¥…¢s S01  ú…™…¥·¥Ö…™ ·¥Ö·¥ú ô ô. ‚ùå
üîπ (6) ·¥†…™·¥ã…™…¥…¢s s·¥á·¥Äs·¥è…¥ 1 ‚ùå
üîπ (7) ·¥†…™·¥ã…™…¥…¢s s·¥á·¥Äs·¥è…¥ 1 ·¥á·¥ò…™s·¥è·¥Ö·¥á 1 ‚ùå
üîπ (8) ·¥†…™·¥ã…™…¥…¢s ·¥°·¥á ô s·¥á Ä…™·¥ás ‚ùå

üîπ D·¥è…¥'·¥õ D·¥è ·¥Ä…¥ è s·¥á ü“ì ·¥ò Ä·¥è·¥ç·¥è·¥õ…™·¥è…¥.

üîπ ·¥Ö·¥è…¥'·¥õ s·¥á…¥·¥Ö ·¥Ä…¥ è ·¥ã…™…¥·¥Ö ·¥è“ì ·¥ò ú·¥è·¥õ·¥è, ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õs ùó®ùó•ùóü ùóòùóßùóñ.

üîπ s·¥á…¥·¥Ö…™…¥…¢ ·¥õ ú·¥á ·¥Ä ô·¥è·¥†·¥á ·¥ç·¥Ä…¥·¥õ·¥Ä…™…¥·¥á·¥Ö, ·¥õ ú…™…¥…¢s ·¥°…™ ü ü  ü·¥á·¥Ä·¥Ö ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ô·¥Ä…¥.

üîπ ·¥Ö·¥è…¥'·¥õ  Ä·¥á«´·¥ú·¥ás·¥õ ·¥Ä…¥ è ·¥õ ú…™…¥…¢s ·¥è·¥õ ú·¥á Ä ·¥õ ú·¥Ä…¥ ·¥ç·¥è·¥†…™·¥á s·¥á Ä…™·¥ás ·¥Ä…¥…™·¥ç·¥ás..

üîπ ·¥Ö·¥è…¥'·¥õ ·¥Ö…™s·¥õ·¥ú Ä ô ·¥Ä…¥ è·¥è…¥·¥á ·¥è…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò..

üîπ …¢…™·¥†·¥á ·¥Ä…¥·¥Ö ·¥õ·¥Ä·¥ã·¥á  Ä·¥ás·¥ò·¥á·¥Ñ·¥õ</b>"""


MY_DETALS = """<b>Hey {}. Welcome ‚ù§Ô∏è

üîπ ·¥ç è …¥·¥Ä·¥ç·¥á : s·¥Ä ú…™·¥Ö ·¥ç·¥Ä ü…™·¥ã
üîπ ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á: @sahid_malik
üîπ ·¥ò·¥ç·¥õ. ·¥Ö·¥ç  ü…™…¥·¥ã: <a href=https://t.me/sahid_malik>·¥Ñ ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á</a>
üîπ ·¥ò ü·¥Ä·¥Ñ·¥á: s·¥Ä ú·¥Ä Ä·¥Ä…¥·¥ò·¥ú Ä | ·¥ú·¥ò | …™…¥·¥Ö…™·¥Ä
üîπ ·¥ã…¥·¥è·¥°  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á:  ú…™…¥·¥Ö…™, ·¥á…¥…¢ ü…™s ú,
      ·¥ç·¥Ä ü è·¥Ä ü·¥Ä·¥ç
üîπ  Ä·¥á ü…™…¢…™·¥è…¥ ·¥Ñ·¥Äs·¥õ: ·¥ç·¥ús ü…™·¥ç
üîπ ·¥Ö·¥è ô: 00 | 09 | 2005
üîπ A…¢·¥á: ·¥ä·¥ús·¥õ ·¥Ñ·¥Ä ü·¥Ñ·¥ú ü·¥Ä·¥õ·¥á
üîπ  ü·¥á·¥†·¥á ü: “ì Ä…™s·¥õ  è·¥á·¥Ä Ä  ô·¥õ·¥á·¥Ñ ·¥á·¥Ñ·¥á
üîπ “ì·¥Ä·¥† ·¥Ñ·¥è ü·¥è·¥ú Ä:  Ä·¥á·¥Ö, …¢ Ä·¥á·¥á…¥,  ô ü·¥ú·¥á..</b>"""

GOOGL = """üîπùóõùó≤ùóπùóΩ ùóöùóºùóºùó¥ùóπùó≤ ùóßùóøùóÆùóªùòÄùóπùóÆùòÅùó≤üîπ

üî∏·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  ú·¥á ü·¥ò  è·¥è·¥ú ·¥õ·¥è ·¥õ Ä·¥Ä…¥s ü·¥Ä·¥õ·¥á ·¥Ä ·¥õ·¥áx·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ãs ·¥è…¥  ô·¥è·¥õ ú ·¥ò·¥ç ·¥Ä…¥·¥Ö …¢ Ä·¥è·¥ú·¥ò..

üîπùóñùóºùó∫ùó∫ùóÆùóªùó±ùòÄ ùóÆùóªùó± ùó®ùòÄùóÆùó¥ùó≤üîπ

üî∏ /tr - ·¥õ·¥è ·¥õ Ä·¥Ä…¥s ü·¥Ä·¥õ·¥á ·¥õ·¥áx·¥õs ·¥õ·¥è ·¥Ä s·¥ò·¥á·¥Ñ…™“ì…™·¥Ñ  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á..

üîπ ùó°ùóºùòÅùó≤ üîπ

üî∏·¥° ú…™ ü·¥á ·¥ús…™…¥…¢ /tr  è·¥è·¥ú s ú·¥è·¥ú ü·¥Ö s·¥ò·¥á·¥Ñ…™“ì è ·¥õ ú·¥á  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á ·¥Ñ·¥è·¥Ö·¥á.

üîπ ùóòùòÖùóπ: /tr hi
üî∏ ·¥á…¥ = E…¥…¢ ü…™Íú± ú 
üî∏ ·¥ç ü = ·¥ç·¥Ä ü·¥Ä è·¥Ä ü·¥Ä·¥ç 
üî∏  ú…™ = H…™…¥·¥Ö…™"""


MMALL = """<b>Hey {}.üëã\n\n‚ö†Ô∏èOops !! Not supported media file\n\nReply to a supported media file</b>"""
MMAL = """<b>Hey {}.üëã\n\n‚ö†Ô∏èOops !! Not a sticker file\n\nplease Reply Valid sticker file</b>"""

STKR = """ è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥ç·¥è·¥Ö·¥ú ü·¥ás ·¥õ·¥è “ì…™…¥·¥Ö ·¥Ä…¥ è s·¥õ…™·¥Ñ·¥ã·¥á Ä …™·¥Ö.
 
 ·¥õ·¥è …¢·¥á·¥õ s·¥õ…™·¥Ñ·¥ã·¥á Ä …™·¥Ö 

üîπ <b> ú·¥è·¥° ·¥õ·¥è ·¥ús·¥á</b> üîπ


 Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä…¥ è s·¥õ…™·¥Ñ·¥ã·¥á Ä /STICKER  ·¥Ä…¥·¥Ö /ST"""

FONTS = """üîπ <b> ú·¥á ü·¥ò “ì·¥è Ä “ì·¥è…¥·¥õs</b> üîπ

“ì·¥è…¥·¥õ …™s ·¥Ä ·¥ç·¥è·¥Ö·¥ú ü·¥á “ì·¥è Ä ·¥ç·¥Ä·¥ã·¥á  è·¥è·¥ú Ä ·¥õ·¥áx·¥õ s·¥õ è ü·¥ás.

“ì·¥è Ä ·¥ús·¥á ·¥õ ú·¥Ä·¥õ “ì·¥á·¥ú·¥õ·¥ú Ä·¥á ·¥õ è·¥ò·¥á ..

/FONTS,  [ è·¥è·¥ú Ä ·¥õ·¥áx·¥õ] ·¥õ ú·¥á…¥  è·¥è·¥ú Ä ·¥õ·¥áx·¥õ …™s  Ä·¥á·¥Ö è."""

WRITE = """¬ª ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥ÖÍú± Íú∞·¥è Ä‚Äã‚Äã W Ä…™·¥õ·¥áT·¥è·¥è ü :


 W Ä…™·¥õ·¥áÍú± ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥õ·¥áx·¥õ ·¥è…¥ ·¥° ú…™·¥õ·¥á ·¥ò·¥Ä…¢·¥á ·¥°…™·¥õ ú ·¥Ä ·¥ò·¥á…¥ üñä

‚ùç /·¥° Ä…™·¥õ·¥á <·¥õ·¥áx·¥õ> : W Ä…™·¥õ·¥áÍú± ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥õ·¥áx·¥õ."""

SONGS = """s·¥è…¥…¢ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥ç·¥è·¥Ö·¥ú ü·¥á...

s·¥è…¥…¢ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥ç·¥è·¥Ö·¥ú ü·¥á. “ì·¥è Ä...
·¥õ ú·¥ès·¥á ·¥° ú·¥è  ü·¥è·¥†·¥á ·¥ç·¥ús…™·¥Ñ.  è·¥è·¥ú ·¥Ñ·¥Ä…¥  ès·¥á ·¥õ ú…™s “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á “ì·¥è Ä ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ä…¥ è s·¥è…¥…¢ ·¥°…™·¥õ ú s·¥ú·¥ò·¥á Ä “ì·¥Äs·¥õ s·¥ò·¥á·¥á·¥Ö ·¥°·¥è·¥ãs ·¥è…¥ ü è ·¥è…¥ …¢ Ä·¥è·¥ú·¥òs...

üîπ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös üîπ

/song s·¥è…¥…¢ …¥·¥Ä·¥ç·¥á
·¥°·¥è Ä·¥ãs ·¥è…¥ ü è ·¥è…¥ …¢ Ä·¥è·¥ú·¥ò"""

WALL = """malik"""

SHARETXT = """malik"""


MALIKK = """<b> ú·¥á è {}.üëã\n\n‚ö†Ô∏èOops !!  è·¥è·¥ú Ä  Ä·¥è…¥…¢\n\n·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥\n\n“ì Ä…™s·¥õ ‚úç ·¥õ…™·¥ò·¥á  è·¥è·¥ú Ä ·¥õ·¥áx·¥õ ·¥Ä…¥·¥Ö  Ä·¥á·¥ò ü è /tr hi
 ú…™ =  ú…™…¥·¥Ö…™ 
·¥á…¥ = ·¥á…¥…¢ ü…™s ú 
·¥ç ü = ·¥ç·¥Ä ü·¥Ä è·¥Ä ü·¥Ä·¥ç </b>"""
MALK = environ.get("MALk", "https://telegra.ph/file/66278d019899141f4b028.jpg")

MQTK = environ.get("MQTK", "https://telegra.ph/file/66278d019899141f4b028.jpg")
TMP_DOWNLOAD_DIRECTORY = environ.get("TMP_DOWNLOAD_DIRECTORY", "./DOWNLOADS/")
PPC = environ.get("PPC", "https://telegra.ph/file/3b6afd6c6fcd09606ea9f.jpg")
MQTTP = environ.get("MQTTP", "https://telegra.ph/file/f8a3c7a57376427646f39.jpg")
TG_MAX_SELECT_LEN = environ.get("TG_MAX_SELECT_LEN", "100")
WCM_P = environ.get("WCM_P", "https://telegra.ph/file/bdaa63ddf255fd3506f0a.jpg")
SMART_PIC = environ.get("SMART_PIC", "https://telegra.ph/file/61c841eee315ecc92a290.jpg")
GHHMN = environ.get("GHHMN", "https://telegra.ph/file/4265c6e3428cd2b060ede.jpg")
GHHMO = environ.get("GHHMNO", "https://telegra.ph/file/605f4c8b2461c1e4f8123.jpg")
G_R = environ.get("G_R", "https://telegra.ph/file/0dd95cec0179cb3721d71.jpg")
COMMAND_HAND_LER = environ.get("COMMAND_HAND_LER", "/")
PPI = environ.get("PPI", "https://telegra.ph/file/2315c0c4b48223f32b020.jpg")

IYGL = environ.get("IYGL", "https://youtu.be/KQSplGRD5gQ")

REQUEST_ADMIN = environ.get("REQUEST_ADMIN", "https://t.me/m_admins")
YTILK = environ.get("YTILK", "https://youtube.com/channel/UCPaHDqWf3D3w2nxb8p3sr4A")

